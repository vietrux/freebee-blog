---
import '../styles/global.css';
import BrutalistLayout from '../layouts/brutalist.astro';
import Marquee from '../components/marquee.astro';
import { getCollection } from 'astro:content';

// Get all blog posts
const allPosts = await getCollection('blog');
const posts = allPosts.sort((a, b) => b.data.date.getTime() - a.data.date.getTime());

// Get featured post
const featuredPost = posts.find(post => post.data.featured) || posts[0];

// Create breaking news from post titles (fallback for new stories)
const breakingNewsFallback = posts.slice(0, 8).map(post => 
	`BREAKING: ${post.data.title}`
);

// Create excerpts marquee from all post excerpts (fallback for top stories)
const excerptsMarqueeFallback = posts.map(post => 
	`${post.data.title}: ${post.data.excerpt}`
);

// Fetch latest Hacker News new stories (for bigger marquee)
async function getHackerNewsNewStories() {
	try {
		// Get new story IDs
		const response = await fetch('https://hacker-news.firebaseio.com/v0/newstories.json');
		const storyIds = await response.json();
		
		// Get first 8 story details
		const storyPromises = storyIds.slice(0, 8).map(async (id) => {
			const storyResponse = await fetch(`https://hacker-news.firebaseio.com/v0/item/${id}.json`);
			return await storyResponse.json();
		});
		
		const stories = await Promise.all(storyPromises);
		return stories.filter(story => story && story.title).map(story => `BREAKING: ${story.title}`);
	} catch (error) {
		console.error('Failed to fetch Hacker News new stories:', error);
		// Fallback to blog posts if API fails
		return breakingNewsFallback;
	}
}

// Fetch top Hacker News stories (for smaller marquee)
async function getHackerNewsTopStories() {
	try {
		// Get top story IDs
		const response = await fetch('https://hacker-news.firebaseio.com/v0/topstories.json');
		const storyIds = await response.json();
		
		// Get first 10 story details
		const storyPromises = storyIds.slice(0, 10).map(async (id) => {
			const storyResponse = await fetch(`https://hacker-news.firebaseio.com/v0/item/${id}.json`);
			return await storyResponse.json();
		});
		
		const stories = await Promise.all(storyPromises);
		return stories.filter(story => story && story.title).map(story => story.title);
	} catch (error) {
		console.error('Failed to fetch Hacker News top stories:', error);
		// Fallback to blog excerpts if API fails
		return excerptsMarqueeFallback;
	}
}

// Get Hacker News stories for both marquees
const hackerNewsNewStories = await getHackerNewsNewStories();
const hackerNewsTopStories = await getHackerNewsTopStories();
---

<BrutalistLayout title="FREEBEE BLOG POSTS">
	<!-- Breaking News Marquee (New Stories) -->
	<div style="background: var(--brutal-black); padding: 0;">
		<Marquee items={hackerNewsNewStories} />
	</div>

	<!-- Hacker News Marquee (Top Stories) -->
	<div style="background: var(--brutal-blue); padding: 0; margin-top: 4px;">
		<div class="relative flex w-full overflow-x-hidden border-b-2 border-t-2 border-white bg-blue-600 text-white font-base">
			<div class="animate-marquee-slow whitespace-nowrap py-8">
				{hackerNewsTopStories.map((story) => (
					<span key={story} className="mx-6 text-lg font-mono">
						{story}
					</span>
				))}
			</div>
			<div class="absolute top-0 animate-marquee2-slow whitespace-nowrap py-8">
				{hackerNewsTopStories.map((story) => (
					<span key={story} className="mx-6 text-lg font-mono">
						{story}
					</span>
				))}
			</div>
		</div>
	</div>

	<!-- Main Content -->
	<div style="padding: 40px 20px; max-width: 1200px; margin: 0 auto;">
		<!-- Featured Article -->
		<div class={`news-card ${featuredPost.data.color}`} style="margin-bottom: 40px; padding: 30px;">
			<div class="brutal-text" style="font-size: 2.5rem; margin-bottom: 20px; color: var(--brutal-red);">
				FEATURED: {featuredPost.data.title}
			</div>
			<div style="font-size: 1.3rem; line-height: 1.4; margin-bottom: 20px;">
				{featuredPost.data.excerpt}
			</div>
			<div style="display: flex; justify-content: space-between; align-items: center;">
				<div class="author-badge">
					BY {featuredPost.data.author}
				</div>
				<div style="font-weight: 700; text-transform: uppercase;">
					{featuredPost.data.date.toLocaleDateString('en-US', { 
						year: 'numeric', 
						month: 'long', 
						day: 'numeric' 
					})}
				</div>
			</div>
		</div>

		<!-- News Grid -->
		<div class="news-grid">
			{posts.map((post) => (
				<article class={`news-card ${post.data.color}`}>
					<div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 15px;">
						<div class="brutal-text" style="font-size: 0.9rem; color: var(--brutal-black);">
							{post.data.category}
						</div>
						<div style="font-size: 0.8rem; font-weight: 700;">
							{post.data.date.toLocaleDateString('en-US', { 
								month: 'short', 
								day: 'numeric' 
							})}
						</div>
					</div>
					<h2 class="brutal-text" style="font-size: 1.5rem; margin-bottom: 15px; line-height: 1.2;">
						{post.data.title}
					</h2>
					<p style="font-size: 1rem; line-height: 1.4; margin-bottom: 20px;">
						{post.data.excerpt}
					</p>
					<a href={`/blog/${post.slug}`} class="brutal-button" style="width: 100%; text-decoration: none; display: block; text-align: center;">
						READ MORE
					</a>
				</article>
			))}
		</div>

		<!-- Call to Action -->
		<div style="text-align: center; margin-top: 60px; padding: 40px; background: var(--brutal-white); color: var(--brutal-black); border: 4px solid var(--brutal-white); box-shadow: 8px 8px 0px var(--brutal-white);">
			<div class="brutal-text" style="font-size: 2rem; margin-bottom: 20px;">
				CONNECT WITH FREEBEE
			</div>
			<div style="font-size: 1.2rem; margin-bottom: 30px;">
				Follow my security journey, CTF writeups, and coding adventures. 
				Let's learn and hack together!
			</div>
			<a href="https://t.me/frogv7" class="brutal-button" style="font-size: 1.1rem; padding: 16px 32px; text-decoration: none; display: inline-block;">
				CONTACT ON TELEGRAM
			</a>
		</div>
	</div>
</BrutalistLayout>
